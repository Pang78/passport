Here's a refined version of your requirements with clearer technical specifications and organization:

**Enhanced Immigration Clearance Application Requirements**

1. **Modal Form Implementation**
- **Trigger:** Display modal immediately after successful passport data upload/extraction, before CSV export option
- **Required Fields:**
  - *Mode of Transport (MOT):* Dropdown with mapped values
    - Options: 
      - Bus Hall (B)
      - Bus Lane (U)
      - Not Applicable (Z)
  - *Checkpoint:* Dropdown with mapped values
    - Options:
      - Woodlands (W)
      - Tuas (H)
  - *Arrival/Departure Date:* Date picker with DD/MM/YYYY format
  - *Arrival/Departure Time:* Time picker with HH:MM:SS format
  - *TV Group:* Pre-filled text field with "99-Unclassified" (disabled input)
  - *Clearance Mode:* Pre-filled text field with "E-Enterprise" (disabled input)
  - *Clearance Source:* Pre-filled text field with "M-Manual Entry" (disabled input)
  - *User ID:* Free-text input with NRIC validation regex
  - *Hostname:* Free-text input for clearance terminal name

2. **Data Handling Requirements**
- **Time Zone Conversion:** Automatically convert date/time inputs to GMT+8 timestamps
- **Form Validation:**
  - Mandatory fields: MOT, Checkpoint, Date, Time, User ID, Hostname
  - NRIC format validation using Singaporean ID regex pattern
  - Prevent modal closure until valid data entered

3. **CSV Export Functionality**
- **Data Structure:** Append these columns to each row in CSV:
  ```
  MOT,Checkpoint,ArrivalDepartureDate,ArrivalDepartureTime,TVGroup,ClearanceMode,ClearanceSource,UserID,Hostname
  ```
- **Value Population:** All rows should receive identical values from modal selections
- **Format Preservation:**
  - Dates: DD/MM/YYYY
  - Times: HH:MM:SS
  - Literal code values (B/W/E/M etc.) without descriptive text

4. **User Interface Flow**
Passport Upload → Data Extraction → Modal Form → Validation → CSV Export

**Technical Recommendations:**
- Implement client-side timestamp conversion using JavaScript's `toLocaleString()` with `timeZone: 'Asia/Singapore'`
- Use library like Moment.js or date-fns for robust timezone handling
- Include server-side validation for NRIC format (e.g., ^[STFG]\d{7}[A-Z]$)
- Consider CSV sanitization to prevent injection attacks
- Add loading states between form submission and CSV generation

Would you like me to elaborate on any specific aspect of these requirements or provide sample code structures?